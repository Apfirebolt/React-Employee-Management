{"version":3,"sources":["logo.svg","components/Navbar.js","components/PaginationComponent.js","pages/HomePage.js","pages/EmployeeDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","console","log","this","detail_page","className","role","aria-label","to","Component","PaginationComponent","state","pageList","current_page","total_pages","changePage","bind","e","totalPages","currentPage","itemsPerPage","totalItems","setState","previousProps","previousState","pages","Math","ceil","page_array","i","push","paginateChange","data-role","onClick","map","item","index","key","value","htmlFor","type","placeholder","onChange","HomePage","apiData","dataLoaded","error_text","search_text","searchText","sortResults","loadAPIData","goToDetail","id","history","current_data","detail","axios","get","then","response","data","catch","err","target","page_type","getAttribute","filteredData","filter","first_name","indexOf","max_pages","length","parseInt","page","event","sortedResult","sort","a","b","last_name","company_name","city","zip","email","web","age","indexofLastPost","indexofFirstPost","currentPosts","slice","color","height","width","EmployeeDetailPage","company","obj_detail","location","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c6c5369.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Link } from 'react-router-dom';\r\nimport './component_styles.scss';\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n  componentDidUpdate() {\r\n    console.log('The props are : ', this.props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('The props are : ', this.props);\r\n  }\r\n  render() {\r\n    const { detail_page } = this.props;\r\n    return (\r\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n        {detail_page && detail_page == true ?\r\n          <Link to=\"/\" className=\"nav_icon\">\r\n            <i className=\"fa fa-backward\"></i>\r\n          </Link>\r\n          :\r\n          null\r\n        }\r\n        <div className=\"navbar-brand\">\r\n          <p className=\"is-size-3 has-text-centered\">DataPeace</p>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport './component_styles.scss';\r\n\r\nclass PaginationComponent extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      pageList: [],\r\n      current_page: 1,\r\n      total_pages: 0\r\n    }\r\n\r\n    this.changePage = this.changePage.bind(this);\r\n\r\n  }\r\n\r\n  changePage(e) {\r\n    const { current_page } = this.state;\r\n    console.log('The current page is : ', current_page);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { currentPage, itemsPerPage, changePage, totalItems, totalPages } = this.props;\r\n    const { pageList } = this.state;\r\n    this.setState({\r\n      pageList: [1, 2, '...', totalPages-1, totalPages]\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    const { pageList } = this.state;\r\n    if (previousProps.totalItems !== this.props.totalItems) {\r\n      let pages = Math.ceil(this.props.totalItems/5);\r\n      let page_array = [];\r\n\r\n      if(pages > 5) {\r\n        page_array = [1, 2, '...', pages-1, pages];\r\n      }\r\n      else {\r\n        for(let i=0; i<pages; i++)\r\n          page_array.push(i+1);\r\n      }\r\n\r\n      this.setState({\r\n        pageList: page_array\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { currentPage, itemsPerPage, totalItems, paginateChange, changePage, totalPages } = this.props;\r\n    const { pageList, current_page } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"button_container\">\r\n          <button className=\"button\" data-role=\"prev\" onClick={(e) => {changePage(e)}}>Previous</button>\r\n          {pageList.map((item, index) => {\r\n            return (\r\n              <button key={index} value={item} className=\"button is-success\" onClick={(e) => paginateChange(e)}>{item}</button>\r\n            )\r\n          })}\r\n          <button className=\"button\" data-role=\"next\" onClick={(e) => {changePage(e)}}>Next</button>\r\n        </div>\r\n        <div className=\"columns\">\r\n          <div className=\"column\">\r\n            <label htmlFor=\"page_number\" className=\"has-text-danger is-size-6\">Enter Page Number, You are currently on page\r\n              <span className=\"has-text-info is-size-5\">{currentPage}</span></label>\r\n          </div>\r\n          <div className=\"column is-two-thirds\">\r\n            <div className=\"control\">\r\n              <input className=\"input is-primary\" type=\"number\" placeholder=\"Go to page number\" onChange={(e) => {paginateChange(e)}}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaginationComponent;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner'\r\nimport axios from 'axios';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport PaginationComponent from '../components/PaginationComponent';\r\n\r\nimport './page_styles.scss';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass HomePage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      apiData: [],\r\n      dataLoaded: true,\r\n      error_text: '',\r\n      search_text: '',\r\n      current_page: 1,\r\n      itemsPerPage: 5,\r\n      totalPages: 0\r\n    }\r\n    this.searchText = this.searchText.bind(this);\r\n    this.sortResults = this.sortResults.bind(this);\r\n    this.loadAPIData = this.loadAPIData.bind(this);\r\n    this.goToDetail = this.goToDetail.bind(this);\r\n    this.changePage = this.changePage.bind(this);\r\n    this.paginateChange = this.paginateChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('The props Home are : ', this.props);\r\n    this.loadAPIData();\r\n  }\r\n\r\n  goToDetail(e, id) {\r\n    const { history } = this.props;\r\n    const { apiData } = this.state;\r\n\r\n    let current_data = apiData[id-1];\r\n    history.push(`/user/${id}`, { detail: current_data });\r\n  }\r\n\r\n  loadAPIData() {\r\n    const { dataLoaded, apiData } = this.state;\r\n    let url = 'https://cors-anywhere.herokuapp.com/https://datapeace-storage.s3-us-west-2.amazonaws.com/dummy_data/users.json';\r\n    this.setState({dataLoaded: false});\r\n    axios.get(url)\r\n      .then((response) => {\r\n\r\n        this.setState({\r\n          apiData: response.data,\r\n          dataLoaded: true\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log('There was some error : ', err);\r\n      })\r\n  }\r\n\r\n  searchText(e) {\r\n    const { search_text, current_page } = this.state;\r\n    if(!search_text)\r\n    {\r\n      this.setState({\r\n        current_page: 1\r\n      })\r\n    }\r\n    this.setState({\r\n      search_text: e.target.value,\r\n    });\r\n  }\r\n\r\n  changePage(e) {\r\n    let { current_page, apiData, search_text } = this.state;\r\n    let page_type = e.target.getAttribute(\"data-role\");\r\n    let filteredData = apiData.filter((item) => {\r\n      return item.first_name.indexOf(search_text) !== -1;\r\n    });\r\n    let max_pages = Math.ceil(filteredData.length/5);\r\n    if(page_type === 'prev') {\r\n      if(current_page <= 1)\r\n        current_page = 1;\r\n      else\r\n        current_page = parseInt(current_page) - 1;\r\n    }\r\n\r\n    if(page_type === 'next') {\r\n      if(current_page >= max_pages)\r\n        return false;\r\n\r\n      current_page = parseInt(current_page) + 1;\r\n    }\r\n\r\n    this.setState({\r\n      current_page: current_page\r\n    });\r\n  }\r\n\r\n  paginateChange(e) {\r\n    const { current_page } = this.state;\r\n    let page = e.target.value;\r\n    if(!page) {\r\n      return false;\r\n    }\r\n    if(page === '...')\r\n    {\r\n      return false;\r\n    }\r\n    this.setState({\r\n      current_page: page\r\n    });\r\n  }\r\n\r\n  sortResults(event) {\r\n    const { search_text, apiData } = this.state;\r\n    const choice = event.target.getAttribute(\"data-role\");\r\n    let sortedResult;\r\n\r\n    switch(choice) {\r\n      case 'sn':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.id < b.id) { return -1; }\r\n          if(a.id > b.id) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n      case 'firstName':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.first_name < b.first_name) { return -1; }\r\n          if(a.first_name > b.first_name) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n      case 'lastName':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.last_name < b.last_name) { return -1; }\r\n          if(a.last_name > b.last_name) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n      case 'company':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.company_name < b.company_name) { return -1; }\r\n          if(a.company_name > b.company_name) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n      case 'city':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.city < b.city) { return -1; }\r\n          if(a.city > b.city) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n      case 'state':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.state < b.state) { return -1; }\r\n          if(a.state > b.state) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n      case 'zip':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.zip < b.zip) { return -1; }\r\n          if(a.zip > b.zip) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n      case 'email':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.email < b.email) { return -1; }\r\n          if(a.email > b.email) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n      case 'web':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.web < b.web) { return -1; }\r\n          if(a.web > b.web) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n      case 'age':\r\n        sortedResult = apiData.sort((a, b) => {\r\n          if(a.age < b.age) { return -1; }\r\n          if(a.age > b.age) { return 1; }\r\n          return 0;\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      apiData: sortedResult\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { dataLoaded, apiData, search_text, current_page, itemsPerPage, totalPages } = this.state;\r\n\r\n    const indexofLastPost = current_page * itemsPerPage;\r\n    const indexofFirstPost = indexofLastPost - itemsPerPage;\r\n\r\n    let filteredData = apiData.filter((item) => {\r\n      return item.first_name.indexOf(search_text) !== -1;\r\n    });\r\n\r\n    const currentPosts = filteredData.slice(indexofFirstPost, indexofLastPost);\r\n\r\n    if(dataLoaded) {\r\n      return (\r\n        <div>\r\n          <Navbar/>\r\n          <div className=\"field\">\r\n            <label className=\"label\"><i className=\"\"></i>Enter Name to search!</label>\r\n            <div className=\"control\">\r\n              <input className=\"input\" type=\"text\" onChange={(e) => {this.searchText(e)}} placeholder=\"Text input\" />\r\n            </div>\r\n          </div>\r\n\r\n          <table className=\"table\">\r\n            <thead>\r\n            <tr>\r\n              <th data-role=\"sn\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>SN <i className=\"fa fa-angle-down\"></i></th>\r\n              <th data-role=\"firstName\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>First Name<i className=\"fa fa-angle-down\"></i></th>\r\n              <th data-role=\"lastName\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>Last Name<i className=\"fa fa-angle-down\"></i></th>\r\n              <th data-role=\"company\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>Company<i className=\"fa fa-angle-down\"></i></th>\r\n              <th data-role=\"city\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>City<i className=\"fa fa-angle-down\"></i></th>\r\n              <th data-role=\"state\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>State<i className=\"fa fa-angle-down\"></i></th>\r\n              <th data-role=\"zip\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>ZIP<i className=\"fa fa-angle-down\"></i></th>\r\n              <th data-role=\"email\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>Email<i className=\"fa fa-angle-down\"></i></th>\r\n              <th data-role=\"web\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>Web<i className=\"fa fa-angle-down\"></i></th>\r\n              <th data-role=\"age\" onClick={(e) => {\r\n                this.sortResults(e)\r\n              }}>Age<i className=\"fa fa-angle-down\"></i></th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {currentPosts.map((item, index) => {\r\n              return (\r\n                <tr key={item.id} onClick={(e) => {this.goToDetail(e, item.id)}}>\r\n                  <td><Link to=\"/employee\" >{item.id}</Link></td>\r\n                  <td>{item.first_name}</td>\r\n                  <td>{item.last_name}</td>\r\n                  <td>{item.company_name}</td>\r\n                  <td>{item.city}</td>\r\n                  <td>{item.state}</td>\r\n                  <td>{item.zip}</td>\r\n                  <td>{item.email}</td>\r\n                  <td>{item.web}</td>\r\n                  <td>{item.age}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n            </tbody>\r\n          </table>\r\n          <PaginationComponent\r\n            currentPage={current_page}\r\n            itemsPerPage={itemsPerPage}\r\n            changePage={this.changePage}\r\n            totalItems={filteredData.length}\r\n            paginateChange={this.paginateChange}\r\n            totalPages={Math.ceil(filteredData.length/5)}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"spinner_container\">\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"indianred\"\r\n            height={300}\r\n            width={300}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n\r\n","import React, { Component } from 'react';\r\nimport './page_styles.scss';\r\n\r\nimport Navbar from '../components/Navbar';\r\n\r\nclass EmployeeDetailPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      first_name: '',\r\n      last_name: '',\r\n      company: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n      email: '',\r\n      web: '',\r\n      age: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let obj_detail = this.props.history.location.state.detail;\r\n    this.setState({\r\n      first_name: obj_detail.first_name,\r\n      last_name: obj_detail.last_name,\r\n      company: obj_detail.company_name,\r\n      city: obj_detail.city,\r\n      state: obj_detail.state,\r\n      zip: obj_detail.zip,\r\n      email: obj_detail.email,\r\n      web: obj_detail.web,\r\n      age: obj_detail.age\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { first_name, last_name, company, city, state, zip, email, web, age } = this.state;\r\n    return (\r\n      <div>\r\n        <Navbar detail_page={true} />\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <p>{first_name} {last_name}</p>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div className=\"content\">\r\n\r\n              <div className=\"detail_container\">\r\n                <p>Company</p>\r\n                <p>{company}</p>\r\n              </div>\r\n\r\n              <div className=\"detail_container\">\r\n                <p>City</p>\r\n                <p>{city}</p>\r\n              </div>\r\n\r\n              <div className=\"detail_container\">\r\n                <p>State</p>\r\n                <p>{state}</p>\r\n              </div>\r\n\r\n              <div className=\"detail_container\">\r\n                <p>Zip</p>\r\n                <p>{zip}</p>\r\n              </div>\r\n\r\n              <div className=\"detail_container\">\r\n                <p>Email</p>\r\n                <p>{email}</p>\r\n              </div>\r\n\r\n              <div className=\"detail_container\">\r\n                <p>Web</p>\r\n                <p>{web}</p>\r\n              </div>\r\n\r\n              <div className=\"detail_container\">\r\n                <p>Age</p>\r\n                <p>{age}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EmployeeDetailPage;\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, } from 'react-router-dom';\r\n\r\nimport HomePage from './pages/HomePage';\r\nimport EmployeeDetailPage from './pages/EmployeeDetail';\r\nimport Navbar from './components/Navbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Router>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/user/:id\" component={EmployeeDetailPage} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bulma/css/bulma.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}